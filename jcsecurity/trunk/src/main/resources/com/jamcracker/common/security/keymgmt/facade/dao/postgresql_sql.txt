# Added by paddy for postgresql DB Migration
#GET_PROTECTOR_KEY=SELECT MGMT.KEY_VERSION  ,MGMT.KEY_VALUE  ,MGMT.CRYPTO_TYPE,4,extract_value('//labels[@id="NORMAL"]/algorithm',XML(CMX)) AS ALGORITHM, MGMT.CRYPTO_TYPE,4,extract_value('//labels[@id="NORMAL"]/providerName',XML(CMX))AS PROVIDER FROM JCP_KEY_CYCLE CYC, JCP_CRYPTO_KEY_MGMT MGMT WHERE CYC.KEY_ID   = MGMT.KEY_ID AND MGMT.CRYPTO_TYPE ::NUMERIC =4 AND MGMT.ACTOR_ID    =1000 AND MGMT.STATUS NOT IN('C','DC')

# Modified by KMF team to support postgres

GET_PROTECTOR_KEY=SELECT MGMT.KEY_VERSION  ,MGMT.KEY_VALUE,MGMT.CRYPTO_TYPE,4,extract_value('//labels[@id="HPROTECTOR"]/algorithm',XML(CMX)) AS ALGORITHM,MGMT.CRYPTO_TYPE,4,extract_value('//labels[@id="HPROTECTOR"]/providerName',XML(CMX))AS PROVIDER FROM JCP_KEY_CYCLE CYC, JCP_CRYPTO_KEY_MGMT MGMT WHERE CYC.KEY_ID   = MGMT.KEY_ID AND MGMT.CRYPTO_TYPE ::NUMERIC =4 AND MGMT.ACTOR_ID    =1000 AND MGMT.STATUS NOT IN('C','DC')

GET_ALL_KEYS = SELECT MGMN.CRYPTO_TYPE,MGMN.KEY_VERSION  , MGMN.KEY_VALUE ,  MGMN.ACTOR_ID  ,  MGMN.STATUS ,  MGMN.CRYPTO_ID  ,(CASE WHEN MGMN.CRYPTO_TYPE = 1 THEN extract_value('//labels[@id="PII"]/algorithm',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 2 THEN extract_value('//labels[@id="FII"]/algorithm',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 3 THEN extract_value('//labels[@id="NORMAL"]/algorithm',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 4 THEN extract_value('//labels[@id="HPROTECTOR"]/algorithm',XML(CMX))END) AS ALGORITHMS,(CASE WHEN MGMN.CRYPTO_TYPE = 1 THEN extract_value('//labels[@id="PII"]/providerName',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 2 THEN extract_value('//labels[@id="FII"]/providerName',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 3 THEN extract_value('//labels[@id="NORMAL"]/providerName',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 4 THEN extract_value('//labels[@id="HPROTECTOR"]/providerName',XML(CMX))END) AS PROVIDER,(CASE    WHEN MGMN.CRYPTO_TYPE = 1 THEN extract_value('//labels[@id="PII"]/keyType',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 2 THEN extract_value('//labels[@id="FII"]/keyType',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 3 THEN extract_value('//labels[@id="NORMAL"]/keyType',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 4 THEN extract_value('//labels[@id="HPROTECTOR"]/keyType',XML(CMX))END) AS keyType,(CASE WHEN MGMN.CRYPTO_TYPE = 1 THEN extract_value('//labels[@id="PII"]/keyLength',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 2 THEN extract_value('//labels[@id="FII"]/keyLength',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 3 THEN extract_value('//labels[@id="NORMAL"]/keyLength',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 4 THEN extract_value('//labels[@id="HPROTECTOR"]/keyLength',XML(CMX))END) AS keyLength,(CASE WHEN MGMN.CRYPTO_TYPE = 1 THEN extract_value('//labels[@id="PII"]/keyId',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 2 THEN extract_value('//labels[@id="FII"]/keyId',XML(CMX)) WHEN MGMN.CRYPTO_TYPE = 3 THEN extract_value('//labels[@id="NORMAL"]/keyId',XML(CMX))  WHEN MGMN.CRYPTO_TYPE = 4 THEN extract_value('//labels[@id="HPROTECTOR"]/keyId',XML(CMX))END) AS keyId FROM JCP_KEY_CYCLE CYC, (SELECT MGMT.CRYPTO_ID ,MGMT.KEY_ID , MGMT.CRYPTO_TYPE ::numeric  AS CRYPTO_TYPE, MGMT.KEY_VERSION , MGMT.KEY_VALUE ,MGMT.ACTOR_ID , MGMT.STATUS FROM JCP_CRYPTO_KEY_MGMT MGMT WHERE MGMT.STATUS NOT IN('C','DC') ORDER BY MGMT.KEY_ID )MGMN WHERE CYC.KEY_ID=MGMN.KEY_ID

GET_MISSING_KEY_ACTORS = (SELECT ORGANIZATION_ID FROM JCP_DSTORE DS) EXCEPT (select DISTINCT ACTOR_ID as ORGANIZATION_ID FROM JCP_CRYPTO_KEYS)
GET_CHILD_ACTORS_WITH_PARENT = select org.actor_id, org.parent_syndicator_id from  jcp_organization org where actor_id != 1000 and parent_syndicator_id != 1000 and parent_syndicator_id not in (select o2.actor_id from  jcp_organization o2 where o2.parent_syndicator_id = 1000)
GET_PARENT_FOR_CHILD = select org.parent_syndicator_id from  jcp_organization org where actor_id != 1000 and parent_syndicator_id != 1000 and parent_syndicator_id not in (select o2.actor_id from  jcp_organization o2 where o2.parent_syndicator_id = 1000) and actor_id=?
SAVE_KEY = INSERT INTO JCP_CRYPTO_KEYS(CRYPTO_ID, ACTOR_ID, CRYPTO_TYPE,KEY_VALUE,STATUS) VALUES (NEXTVAL('JCP_CRYPTO_KEYS_S'),?,?,?,'A')

